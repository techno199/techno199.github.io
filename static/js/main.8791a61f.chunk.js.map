{"version":3,"sources":["components/searchBar/suggestions/index.js","components/searchBar/index.js","components/pointList/listItem/index.js","components/pointList/index.js","components/map/customMarker/index.js","components/map/index.js","components/db.js","components/interactiveMap/index.js","App.js","serviceWorker.js","index.js"],"names":["SuggestionsUnstyled","handleClick","item","event","_this","props","onClick","handleBlur","console","log","_this2","this","_this$props","classes","normalizedItems","items","react_default","a","createElement","index_es","elevation","className","root","hidden","length","map","i","button","key","description","Component","Suggestions","withStyles","theme","position","zIndex","marginTop","spacing","unit","width","propTypes","PropTypes","arrayOf","shape","string","isRequired","func","SearchBarUnstyled","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","handleSearchKeyDown","keyCode","onEnter","handleSuggestionClick","onSuggestionClick","inherits","createClass","value","onChange","isFetching","paper","input","placeholder","onKeyDown","progress","size","SearchBar","padding","display","alignItems","marginLeft","flex","bool","listItemTarget","hover","monitor","component","dragIndex","getItem","index","hoverIndex","hoverBoundingRect","findDOMNode","getBoundingClientRect","hoverMiddleY","bottom","top","hoverClientY","getClientOffset","y","moveListItem","PointListItemUnstyled","onRemoveClick","isDragging","text","connectDragSource","connectDropTarget","classNames","listItem","defineProperty","listItemValue","xMark","Clear_default","PointListItem","DropTarget","connect","dropTarget","DragSource","beginDrag","id","dragSource","opacity","flexGrow","minWidth","PointListUnstyled","container","justify","emptyRoot","PointList","backgroundColor","palette","background","minHeight","number","CustomMarkerUnstyled","state","isBaloonOpened","handleMarkerClick","setState","handleBaloonClick","lib","assign","onCloseClick","CustomMarker","lat","lng","MapUnstyled","zoom","handlePositionChanged","location","newLatLng","latLng","onPositionChanged","onMapLoad","selectedLocations","center","path","ref","defaultZoom","onDragEnd","draggable","Map","withScriptjs","withGoogleMap","map_MapUnstyled","getNextId","SEARCH_DEBOUNCE_TIME","InteractiveMapUnstyled","searchBarValue","predictions","apiURLKey","google","debounce","undefined","handleAddLocation","_addLocation","_clearSearchBarValue","geocoderService","maps","Geocoder","options","placeId","place_id","geocode","details","oldState","slice","geometry","push","_clearSuggestions","handleSearchBoxChange","target","trim","clearTimeout","setTimeout","bounds","getBounds","places","AutocompleteService","getPlacePredictions","handleRemoveClick","filter","locations","dragItem","geocoder","res","status","formatted_address","alert","_this$state","xs","direction","mapWrapper","googleMapURL","loadingElement","style","height","containerElement","mapElement","InteractiveMap","withTheme","App","md","breakpoints","up","Boolean","window","hostname","match","createMuiTheme","default","typography","useNextVariants","ReactDOM","render","Fragment","core_styles","cjs","backend","html5backend","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8791a61f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { withStyles, List, ListItem, Paper, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: 'absolute',\r\n    zIndex: 1000,\r\n    marginTop: theme.spacing.unit,\r\n    width: '100%'\r\n  }\r\n})\r\n\r\nclass SuggestionsUnstyled extends Component {\r\n  handleClick = item => event => {\r\n    this.props.onClick &&\r\n    this.props.onClick(item)\r\n  }\r\n\r\n  handleBlur = event => {\r\n    console.log('onBlur fired')\r\n  }\r\n\r\n  render() {\r\n    const { classes, items } = this.props\r\n    let normalizedItems = items || []\r\n    return (\r\n      <Paper elevation={1} className={classes.root} hidden={!normalizedItems.length}>\r\n        <List>\r\n          {\r\n            normalizedItems.map((item, i) => (\r\n              <ListItem button key={i} onClick={this.handleClick(item)}>\r\n                <Typography>\r\n                  {item.description}\r\n                </Typography>\r\n              </ListItem>\r\n            ))\r\n          }\r\n        </List>\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nconst Suggestions = withStyles(styles)(SuggestionsUnstyled)\r\n\r\nSuggestions.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    description: PropTypes.string.isRequired\r\n  })),\r\n  onClick: PropTypes.func\r\n}\r\n\r\nexport { Suggestions }","import React, { Component } from 'react'\r\nimport { withStyles, Paper, InputBase, CircularProgress } from '@material-ui/core';\r\nimport { Suggestions } from './suggestions';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: 'relative'\r\n  },\r\n  paper: {\r\n    padding: 10,\r\n    display: 'flex',\r\n    alignItems: 'center'\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing.unit,\r\n    flex: 1\r\n  }\r\n})\r\n\r\nexport class SearchBarUnstyled extends Component {\r\n  handleSearchKeyDown = event => {\r\n    if (event.keyCode === 13) {\r\n      this.props.onEnter &&\r\n      this.props.onEnter()\r\n    }\r\n  }\r\n\r\n  handleSuggestionClick = item => {\r\n    this.props.onSuggestionClick &&\r\n    this.props.onSuggestionClick(item)\r\n  }\r\n\r\n  render() {\r\n    const { classes, value, onChange, items, isFetching } = this.props\r\n    return (\r\n      <div className={classes.root}>\r\n        <Paper className={classes.paper} elevation={1}>\r\n          <InputBase \r\n            className={classes.input} \r\n            placeholder=\"Search Google Maps\" \r\n            value={value} \r\n            onChange={onChange}\r\n            onKeyDown={this.handleSearchKeyDown}\r\n          />\r\n          {\r\n            isFetching &&\r\n            <CircularProgress className={classes.progress} size={19}/>\r\n          }\r\n        </Paper>\r\n        <Suggestions items={items} onClick={this.handleSuggestionClick}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst SearchBar = withStyles(styles)(SearchBarUnstyled)\r\n\r\nSearchBar.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    description: PropTypes.string,\r\n  })),\r\n  onChange: PropTypes.func,\r\n  isFetching: PropTypes.bool\r\n}\r\n\r\nexport { SearchBar }\r\n","import React, { Component } from 'react'\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport { withStyles, ListItem, Button, Typography } from '@material-ui/core';\r\nimport classNames from 'classnames'\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { findDOMNode } from 'react-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n  listItem: {\r\n    display: 'flex'\r\n  },\r\n  hidden: {\r\n    opacity: 0\r\n  },\r\n  listItemValue: {\r\n    flexGrow: 1\r\n  },\r\n  xMark: {\r\n    minWidth: 0\r\n  }\r\n})\r\n\r\nconst listItemSource = {\r\n  beginDrag(props) {\r\n    return {\r\n      id: props.id,\r\n      index: props.index\r\n    }\r\n  }\r\n}\r\n\r\nconst listItemTarget = {\r\n  hover(props, monitor, component) {\r\n    if (!component) return\r\n\r\n    const dragIndex = monitor.getItem().index\r\n    const hoverIndex = props.index\r\n    // Don't replace items with themselves\r\n    if (dragIndex === hoverIndex) return\r\n    // Determine rectangle on screen\r\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect()\r\n    // Get vertical middle \r\n    const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2\r\n    // Determine mouse position\r\n    const clientOffset = monitor.getClientOffset()\r\n    // Get pixels to the top\r\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top\r\n    // Dragging upwards\r\n    if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) return\r\n    //Dragging downwards\r\n    if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) return\r\n\r\n    props.moveListItem(dragIndex, hoverIndex)\r\n\r\n    monitor.getItem().index = hoverIndex\r\n  }\r\n}\r\n\r\nexport class PointListItemUnstyled extends Component {\r\n  onRemoveClick = () => {\r\n    this.props.onRemoveClick &&\r\n    this.props.onRemoveClick()\r\n  }\r\n\r\n  render() {\r\n    const { isDragging, classes, text, connectDragSource, connectDropTarget } = this.props\r\n    return (\r\n      connectDragSource(\r\n        connectDropTarget(\r\n          <div>\r\n            <ListItem\r\n              className={classNames(classes.listItem, { [classes.hidden]: isDragging })}\r\n            >\r\n              <Typography className={classes.listItemValue}>\r\n                {text}\r\n              </Typography>\r\n              <Button onClick={this.onRemoveClick} className={classes.xMark}>\r\n                <ClearIcon />\r\n              </Button>\r\n            </ListItem>\r\n          </div>\r\n        )\r\n      )\r\n    )\r\n  }\r\n}\r\n\r\nconst PointListItem = DropTarget('LIST_ITEM', listItemTarget, connect => ({\r\n  connectDropTarget: connect.dropTarget(),\r\n}))(\r\n  DragSource('LIST_ITEM', listItemSource, (connect, monitor) => ({\r\n    connectDragSource: connect.dragSource(),\r\n    isDragging: monitor.isDragging(),\r\n  }))(withStyles(styles)(PointListItemUnstyled)),\r\n)\r\n\r\nPointListItem.propTypes = {\r\n  text: PropTypes.string.isRequired\r\n}\r\n\r\nexport { PointListItem }","import React, { Component } from 'react'\r\nimport { withStyles, List, Grid } from '@material-ui/core';\r\nimport { PointListItem } from './listItem';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    minHeight: 200\r\n  },\r\n  emptyRoot: {\r\n    minHeight: 200,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  hidden: {\r\n    opacity: 0.5\r\n  }\r\n})\r\n\r\nexport class PointListUnstyled extends Component {\r\n  render() {\r\n    const { classes, items, onRemoveClick, moveListItem } = this.props\r\n\r\n    return (\r\n          items.length > 0 ? (\r\n          <List className={classes.root}>\r\n            {items.map((item, i) =>\r\n              <PointListItem \r\n                key={item.id}   \r\n                id={item.id} \r\n                index={i} \r\n                text={item.value} \r\n                onRemoveClick={onRemoveClick(item.id)} \r\n                moveListItem={moveListItem}/>\r\n              )}\r\n          </List>\r\n          ) :\r\n          <Grid container justify='center' alignItems='center' className={classes.emptyRoot}> \r\n            <Grid item>\r\n              No items selected\r\n            </Grid>\r\n          </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nconst PointList = withStyles(styles)(PointListUnstyled)\r\n\r\nPointList.propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number,\r\n    value: PropTypes.string\r\n  })),\r\n  onRemoveClick: PropTypes.func,\r\n  moveListItem: PropTypes.func,\r\n}\r\n\r\nexport { PointList }\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core';\r\nimport { Marker, InfoWindow } from 'react-google-maps';\r\nimport PropTypes from 'prop-types'  \r\n\r\nconst styles = theme => {\r\n\r\n}\r\n\r\nclass CustomMarkerUnstyled extends Component {\r\n  state = {\r\n    isBaloonOpened: false\r\n  }\r\n\r\n  handleMarkerClick = event => {\r\n    this.setState({\r\n      isBaloonOpened: true\r\n    })\r\n  }\r\n\r\n  handleBaloonClick = event => {\r\n    this.setState({\r\n      isBaloonOpened: false\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { position, text } = this.props\r\n    const { isBaloonOpened } = this.state\r\n    return (\r\n      <div>\r\n        <Marker position={position} onClick={this.handleMarkerClick} {...this.props}>\r\n        </Marker>\r\n        {\r\n          isBaloonOpened &&\r\n          <InfoWindow position={position} onCloseClick={this.handleBaloonClick}>\r\n            <div>\r\n              {text}\r\n            </div>\r\n          </InfoWindow>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst CustomMarker = withStyles(styles)(CustomMarkerUnstyled)\r\n\r\nCustomMarker.propTypes = {\r\n  position: PropTypes.shape({\r\n    lat: PropTypes.number.isRequired,\r\n    lng: PropTypes.number.isRequired\r\n  }).isRequired,\r\n  text: PropTypes.string\r\n}\r\n\r\nexport { CustomMarker }\r\n","import React, { Component } from 'react'\r\nimport { withStyles } from '@material-ui/core'\r\nimport { GoogleMap, withGoogleMap, withScriptjs, Polyline  } from 'react-google-maps'\r\nimport { CustomMarker } from './customMarker';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    flexGrow: 1\r\n  }\r\n})\r\n\r\nexport class MapUnstyled extends Component {\r\n  map = null\r\n  state = {\r\n    zoom: 11\r\n  }\r\n\r\n  handlePositionChanged = location => event => {\r\n    let newLatLng = {\r\n      lat: event.latLng.lat(),\r\n      lng: event.latLng.lng()\r\n    }\r\n    this.props.onPositionChanged &&\r\n    this.props.onPositionChanged(location, newLatLng)\r\n  }\r\n\r\n  render() {\r\n    const { zoom } = this.state\r\n    const { onMapLoad, selectedLocations, center } = this.props\r\n    let path = selectedLocations.map(location => ({\r\n      lat: location.lat,\r\n      lng: location.lng\r\n    }))\r\n    return (\r\n      <GoogleMap\r\n        ref={onMapLoad}\r\n        center={center}\r\n        defaultZoom={zoom}\r\n      >\r\n        {\r\n          selectedLocations.map((location, i) => (\r\n            <CustomMarker key={i}\r\n              position={{ lat: location.lat, lng: location.lng }} \r\n              text={location.value}  \r\n              onDragEnd={this.handlePositionChanged(location)} \r\n              draggable={true}/>\r\n          ))\r\n        }\r\n        <Polyline path={path} />\r\n      </GoogleMap>\r\n    )\r\n  }\r\n}\r\n\r\nconst Map = withStyles(styles)(withScriptjs(withGoogleMap(props => <MapUnstyled  {...props}/>)))\r\n\r\nMap.propTypes = {\r\n  onMapLoad: PropTypes.func,\r\n  selectedLocations: PropTypes.arrayOf(PropTypes.shape({\r\n    id: PropTypes.number.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    lat: PropTypes.number.isRequired,\r\n    lng: PropTypes.number.isRequired\r\n  }),),\r\n  center: PropTypes.shape({\r\n    lat: PropTypes.number.isRequired,\r\n    lng: PropTypes.number.isRequired\r\n  }).isRequired,\r\n}\r\n\r\nexport { Map }\r\n","let id = 0;\r\n\r\n/**\r\n * \r\n */\r\nexport const getNextId = () => id++","/*global google*/\r\nimport React, { Component } from 'react'\r\nimport { withStyles, Grid, withTheme } from '@material-ui/core'\r\nimport { SearchBar }  from '../searchBar';\r\nimport { PointList }  from '../pointList';\r\nimport { Map } from '../map';\r\nimport { getNextId } from '../db';\r\n\r\nconst styles = theme => ({\r\n  mapWrapper: {\r\n    display: 'flex'\r\n  }\r\n});\r\n\r\nconst SEARCH_DEBOUNCE_TIME = 300\r\n\r\nexport class InteractiveMapUnstyled extends Component {\r\n  state = {\r\n    searchBarValue: '',\r\n    selectedLocations: [],\r\n    predictions: [],\r\n    apiURLKey: 'AIzaSyCmwHMMrWHwpcDeqgH5xee1LHL9URnDXHA',\r\n    map: null,\r\n    google: null,\r\n    center: {\r\n      lat: 59.95,\r\n      lng: 30.33\r\n    },\r\n    isFetching: false\r\n  }\r\n  debounce = undefined\r\n\r\n  handleAddLocation = () => {\r\n    this._addLocation(this.state.searchBarValue)\r\n    this._clearSearchBarValue()\r\n  }\r\n\r\n  /**\r\n   * Retrieves details of location and adds it to list of selected locations.\r\n   * Sets current map center to newly obtained\r\n   */\r\n  _addLocation = location => {\r\n    let geocoderService= new google.maps.Geocoder()\r\n    let options = {\r\n      placeId: location.place_id\r\n    }\r\n\r\n    geocoderService.geocode(options, details => {\r\n      if (!details.length > 0) return\r\n      else {\r\n        details = details[0]\r\n        this.setState(oldState => {\r\n          let selectedLocations = oldState.selectedLocations.slice()\r\n          let lat = details.geometry.location.lat()\r\n          let lng = details.geometry.location.lng()\r\n          selectedLocations.push({\r\n            id: getNextId(),\r\n            value: location.description,\r\n            lat,\r\n            lng\r\n          })\r\n          return {\r\n            selectedLocations,\r\n            center: {\r\n              lat,\r\n              lng\r\n            }\r\n          }\r\n        })\r\n      } \r\n    })\r\n    \r\n  }\r\n\r\n  _clearSearchBarValue = () => {\r\n    this.setState({searchBarValue: ''})\r\n  }\r\n\r\n  _clearSuggestions = () => {\r\n    this.setState({predictions: []})\r\n  }\r\n\r\n  handleSearchBoxChange = event => {\r\n    let input = event.target.value\r\n\r\n    this.setState({\r\n      searchBarValue: input\r\n    })\r\n    // Clear predictions list if no input provided\r\n    // Indicate that predictions are fetching otherwise\r\n    if (!input.trim()) {\r\n      clearTimeout(this.debounce)\r\n      this.setState({ predictions: [], isFetching: false })\r\n      return\r\n    }\r\n    else {\r\n      this.setState({\r\n        isFetching: true\r\n      })\r\n    }\r\n    // Search for predictions after delay between keystrokes\r\n    this.debounce = setTimeout(() => {\r\n      // Search for predictions on valid user input\r\n      let options = {\r\n        input: input.trim(),\r\n        bounds: this.state.map.getBounds()\r\n      }\r\n  \r\n      let autocompleteService = new google.maps.places.AutocompleteService()\r\n  \r\n      autocompleteService.getPlacePredictions(options, (predictions => {\r\n        this.setState({\r\n            predictions: predictions || [],\r\n            isFetching: false\r\n        });\r\n      }))\r\n    }, SEARCH_DEBOUNCE_TIME)    \r\n  }\r\n\r\n  handleRemoveClick = id => () => {\r\n    this.setState(oldState => {\r\n      let selectedLocations = oldState.selectedLocations.filter(item => item.id !== id)\r\n      return {\r\n        selectedLocations\r\n      }\r\n    })\r\n  }\r\n\r\n  moveListItem = (dragIndex, hoverIndex) => {\r\n    this.setState(oldState => {\r\n      let locations = oldState.selectedLocations.slice()\r\n      let dragItem = locations[dragIndex]\r\n      locations[dragIndex] = locations[hoverIndex]\r\n      locations[hoverIndex] = dragItem\r\n      return {\r\n        selectedLocations: locations\r\n      }\r\n    })\r\n  }\r\n\r\n  onMapLoad = map => {\r\n    this.setState({ map })\r\n  }\r\n\r\n  handleSuggestionClick = item => {\r\n    this._addLocation(item)\r\n    this._clearSearchBarValue()\r\n    this._clearSuggestions()\r\n  }\r\n\r\n  handlePositionChanged = (location, newLatLng) => {\r\n    // https://developers.google.com/maps/documentation/javascript/examples/geocoding-reverse\r\n    let geocoder = new google.maps.Geocoder()\r\n    let options = {\r\n      location: newLatLng\r\n    }\r\n    geocoder.geocode(options, (res, status) => {\r\n      this.setState(oldState => {\r\n        let selectedLocations = oldState.selectedLocations.slice()\r\n        if (status === 'OK') {\r\n          location.lat = newLatLng.lat\r\n          location.lng = newLatLng.lng \r\n          location.value = res[0].formatted_address\r\n        }\r\n        else {\r\n          alert('google doesn\\'t know where it is :(')\r\n        }\r\n        return {\r\n          selectedLocations\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { classes, theme } = this.props\r\n    const { searchBarValue, selectedLocations, apiURLKey, predictions, center, isFetching } = this.state\r\n\r\n    return (\r\n      <Grid container justify='center' spacing={theme.spacing.unit * 2}>\r\n        <Grid item xs={6}>\r\n          <Grid container direction='column' spacing={theme.spacing.unit * 2}>\r\n            <Grid item>\r\n              <SearchBar \r\n                value={searchBarValue} \r\n                onChange={this.handleSearchBoxChange} \r\n                items={predictions}\r\n                onSuggestionClick={this.handleSuggestionClick}\r\n                isFetching={isFetching}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <PointList items={selectedLocations} onRemoveClick={this.handleRemoveClick} moveListItem={this.moveListItem}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={6} className={classes.mapWrapper}>\r\n          <Map \r\n            googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${apiURLKey}&v=3.exp&libraries=geometry,drawing,places`}\r\n            loadingElement={<div style={{height: '100%'}} />}\r\n            containerElement={<div style={{height: '400px', width: '100%'}} />}\r\n            mapElement={<div style={{height: '100%'}} />}\r\n            onMapLoad={this.onMapLoad}\r\n            selectedLocations={selectedLocations}\r\n            onPositionChanged={this.handlePositionChanged}\r\n            center={center}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  }\r\n}\r\n\r\nconst InteractiveMap = withTheme()(withStyles(styles)(InteractiveMapUnstyled))\r\n\r\nexport { InteractiveMap }\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { withStyles, Grid} from '@material-ui/core';\r\nimport { InteractiveMap } from './components/interactiveMap';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up('md')]: {\r\n      marginTop: theme.spacing.unit * 10\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const { classes } = this.props\r\n    return (\r\n      <Grid container justify='center' className={classes.root}>\r\n        <Grid item xs={11} md={10}>\r\n          <InteractiveMap />\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { CssBaseline, createMuiTheme, MuiThemeProvider } from '@material-ui/core';\r\nimport { DragDropContextProvider } from 'react-dnd';\r\nimport html5backend from 'react-dnd-html5-backend'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: '#eeeeee'\r\n    }\r\n  },\r\n  typography: {\r\n    useNextVariants: true\r\n  }\r\n})\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <DragDropContextProvider backend={html5backend}>\r\n        <App />\r\n      </DragDropContextProvider> \r\n    </MuiThemeProvider>\r\n  </React.Fragment>, \r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}